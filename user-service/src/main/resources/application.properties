spring.application.name=user-service
server.port=8081
# Postgresql Configuration settings
spring.datasource.url=jdbc:postgresql://localhost:5435/user_db
spring.datasource.username=user_user
spring.datasource.password=user_pass
spring.datasource.driver-class-name=org.postgresql.Driver
springdoc.swagger-ui.path=/

# JPA Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#client registration configuration
spring.security.oauth2.client.registration.keycloak.client-id=springboot-openid-client-app
spring.security.oauth2.client.registration.keycloak.client-secret=TlOjOmy4vEQbPsKjMqV009wYHdlGaIG2
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid

#OIDC provider configuration:
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/auth/realms/Keycloak_SpringBoot
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:9090/login/oauth2/code/springboot-openid-client-app

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

#validating JWT token against our Keycloak server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/Keycloak_SpringBoot

#session timeout
server.servlet.session.timeout=30m

app.auth.username= my-user
app.auth.password=my-password
app.auth.grant_type=password