version: '3.9'

services:
  auth_db:
    image: postgres:latest
    container_name: auth_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=auth_pass
    volumes:
      - auth_db_data:/var/lib/postgresql/data

  comment_db:
    image: postgres:latest
    container_name: comment_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=comment_db
      - POSTGRES_USER=comment_user
      - POSTGRES_PASSWORD=comment_pass
    volumes:
      - comment_db_data:/var/lib/postgresql/data
  post_db:
    image: postgres:latest
    container_name: post_db
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=post_db
      - POSTGRES_USER=post_user
      - POSTGRES_PASSWORD=post_pass
    volumes:
      - post_db_data:/var/lib/postgresql/data
  user_db:
    image: postgres:latest
    container_name: user_db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=user_user
      - POSTGRES_PASSWORD=user_pass
    volumes:
      - user_db_data:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 8089:8080

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
        - 8180:8080
    depends_on:
        - postgres
  auth_service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - auth_db

  comment_service:
    build:
      context: ./comment-service
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - comment_db
  post_service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    depends_on:
      - post_db
  user_service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8085:8080"
    depends_on:
      - user_db
volumes:
  auth_db_data:
  comment_db_data:
  post_db_data:
  user_db_data:
  postgres_data:
      driver: local